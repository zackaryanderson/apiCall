{"ast":null,"code":"var _jsxFileName = \"/Users/zan/Documents/CodingBootcamp/apiCall/newReactApp/newapp/client/src/Components/RecipeAPI/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_RECIPE } from '../../utils/mutations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RecipeCall() {\n  _s();\n\n  let apiKey = \"b0c7f65173eb4810a62bd72e96c8563f\";\n  let call = \"https://api.spoonacular.com/recipes/random?number=5&apiKey=\" + apiKey;\n  let data = [];\n\n  async function getNewRecipes(call) {\n    let response = await fetch(call);\n    data = await response.json();\n    dataCapture(data);\n  } //capture Recipe API data\n\n\n  const [addRecipe, {\n    error\n  }] = useMutation(ADD_RECIPE);\n\n  function dataCapture(data) {\n    console.log(data.size); //store data from API nested in data variable\n\n    for (let i = 0; i < data.length; i++) {\n      let apiID = data.recipe[i].id;\n      let title = data.recipe[i].title;\n\n      const dataSubmit = async () => {\n        try {\n          const mutationResponse = await addRecipe({\n            variables: {\n              apiID: apiID,\n              title: title\n            }\n          });\n\n          if (error) {\n            throw new Error('something went wrong');\n          }\n\n          ;\n          console.log(mutationResponse);\n        } catch (e) {\n          console.log(e);\n        }\n      };\n\n      dataSubmit();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    onClick: () => getNewRecipes(call),\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#clickme\",\n      children: \"Click Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RecipeCall, \"USZynGUC+v9e+Q1yPEqOz+oZUic=\", false, function () {\n  return [useMutation];\n});\n\n_c = RecipeCall;\nexport default RecipeCall;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeCall\");","map":{"version":3,"names":["React","useMutation","ADD_RECIPE","RecipeCall","apiKey","call","data","getNewRecipes","response","fetch","json","dataCapture","addRecipe","error","console","log","size","i","length","apiID","recipe","id","title","dataSubmit","mutationResponse","variables","Error","e"],"sources":["/Users/zan/Documents/CodingBootcamp/apiCall/newReactApp/newapp/client/src/Components/RecipeAPI/index.js"],"sourcesContent":["import React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_RECIPE } from '../../utils/mutations';\n\nfunction RecipeCall() {\n\n    let apiKey = \"b0c7f65173eb4810a62bd72e96c8563f\";\n    let call = \"https://api.spoonacular.com/recipes/random?number=5&apiKey=\" + apiKey;\n    let data = [];\n\n    async function getNewRecipes (call){\n\n        let response = await fetch (call);\n        data = await response.json();\n\n        dataCapture(data);\n\n    }\n\n    //capture Recipe API data\n    const [addRecipe, {error} ] = useMutation(ADD_RECIPE);\n\n    function dataCapture (data) {\n\n        console.log(data.size);\n\n        //store data from API nested in data variable\n        for (let i = 0; i < data.length; i++) {\n\n            let apiID = data.recipe[i].id;\n            let title = data.recipe[i].title;\n\n\n            const dataSubmit = async () => {\n                try {\n                    const mutationResponse = await addRecipe({\n                        variables: {\n                            apiID: apiID,\n                            title: title\n                        }\n                    });\n\n                    if (error) {\n                        throw new Error('something went wrong');\n                    };\n                    console.log(mutationResponse);\n                } catch (e) {\n                    console.log(e)\n                }\n            }\n\n            dataSubmit();\n\n\n        }\n    }\n\n\n\n    return (\n        <section onClick = {() => getNewRecipes(call)}>\n            <a href=\"#clickme\">Click Me</a>\n        </section>\n    )\n}\n\nexport default RecipeCall;\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,UAAT,QAA2B,uBAA3B;;;AAEA,SAASC,UAAT,GAAsB;EAAA;;EAElB,IAAIC,MAAM,GAAG,kCAAb;EACA,IAAIC,IAAI,GAAG,gEAAgED,MAA3E;EACA,IAAIE,IAAI,GAAG,EAAX;;EAEA,eAAeC,aAAf,CAA8BF,IAA9B,EAAmC;IAE/B,IAAIG,QAAQ,GAAG,MAAMC,KAAK,CAAEJ,IAAF,CAA1B;IACAC,IAAI,GAAG,MAAME,QAAQ,CAACE,IAAT,EAAb;IAEAC,WAAW,CAACL,IAAD,CAAX;EAEH,CAbiB,CAelB;;;EACA,MAAM,CAACM,SAAD,EAAY;IAACC;EAAD,CAAZ,IAAwBZ,WAAW,CAACC,UAAD,CAAzC;;EAEA,SAASS,WAAT,CAAsBL,IAAtB,EAA4B;IAExBQ,OAAO,CAACC,GAAR,CAAYT,IAAI,CAACU,IAAjB,EAFwB,CAIxB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,IAAI,CAACY,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;MAElC,IAAIE,KAAK,GAAGb,IAAI,CAACc,MAAL,CAAYH,CAAZ,EAAeI,EAA3B;MACA,IAAIC,KAAK,GAAGhB,IAAI,CAACc,MAAL,CAAYH,CAAZ,EAAeK,KAA3B;;MAGA,MAAMC,UAAU,GAAG,YAAY;QAC3B,IAAI;UACA,MAAMC,gBAAgB,GAAG,MAAMZ,SAAS,CAAC;YACrCa,SAAS,EAAE;cACPN,KAAK,EAAEA,KADA;cAEPG,KAAK,EAAEA;YAFA;UAD0B,CAAD,CAAxC;;UAOA,IAAIT,KAAJ,EAAW;YACP,MAAM,IAAIa,KAAJ,CAAU,sBAAV,CAAN;UACH;;UAAA;UACDZ,OAAO,CAACC,GAAR,CAAYS,gBAAZ;QACH,CAZD,CAYE,OAAOG,CAAP,EAAU;UACRb,OAAO,CAACC,GAAR,CAAYY,CAAZ;QACH;MACJ,CAhBD;;MAkBAJ,UAAU;IAGb;EACJ;;EAID,oBACI;IAAS,OAAO,EAAI,MAAMhB,aAAa,CAACF,IAAD,CAAvC;IAAA,uBACI;MAAG,IAAI,EAAC,UAAR;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH;;GA5DQF,U;UAgByBF,W;;;KAhBzBE,U;AA8DT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}